"use client";


import { animate, motion } from "framer-motion";
import React, { useEffect, useState } from "react";
import { cn } from "@/lib/utils";

export function CardDemo() {
    return (
        <CardSkeletonContainer>
            <Skeleton />
        </CardSkeletonContainer>
    );
}

const Skeleton = () => {

    return (
        <div className="p-8 overflow-hidden h-full relative flex items-center justify-center">
            <div className="flex flex-row flex-shrink-0 justify-center items-center gap-2">
                <Container className="h-8 w-8 circle-1">
                    <ClaudeLogo />
                </Container>
                <Container className="h-12 w-12 circle-2">
                    <FramerMotion />
                </Container>
                <Container className="circle-3">
                    <OpenAILogo />
                </Container>
                <Container className="h-12 w-12 circle-4">
                    <MetaIconOutline />
                </Container>
                <Container className="h-8 w-8 circle-5">
                    <GeminiLogo />
                </Container>
            </div>

        </div>
    );
};
const Sparkles = () => {
    const randomMove = () => Math.random() * 2 - 1;
    const randomOpacity = () => Math.random();
    const random = () => Math.random();
    return (
        <div className="absolute inset-0">
            {[...Array(12)].map((_, i) => (
                <motion.span
                    key={`star-${i}`}
                    animate={{
                        top: `calc(${random() * 100}% + ${randomMove()}px)`,
                        left: `calc(${random() * 100}% + ${randomMove()}px)`,
                        opacity: randomOpacity(),
                        scale: [1, 1.2, 0],
                    }}
                    transition={{
                        duration: random() * 2 + 4,
                        repeat: Infinity,
                        ease: "linear",
                    }}
                    style={{
                        position: "absolute",
                        top: `${random() * 100}%`,
                        left: `${random() * 100}%`,
                        width: `2px`,
                        height: `2px`,
                        borderRadius: "50%",
                        zIndex: 1,
                    }}
                    className="inline-block bg-black dark:bg-white"
                ></motion.span>
            ))}
        </div>
    );
};


export const CardSkeletonContainer = ({
    className,
    children,
    showGradient = true,
}: {
    className?: string;
    children: React.ReactNode;
    showGradient?: boolean;
}) => {
    return (
        <div
            className={cn(
                "h-[15rem] md:h-[20rem] rounded-xl z-40",
                className,
                showGradient &&
                ""
            )}
        >
            {children}
        </div>
    );
};

const Container = ({
    className,
    children,
}: {
    className?: string;
    children: React.ReactNode;
}) => {
    return (
        <div
            className={cn(
                `h-16 w-16 rounded-full flex items-center justify-center bg-[rgba(248,248,248,0.01)]
    shadow-[0px_0px_8px_0px_rgba(248,248,248,0.25)_inset,0px_32px_24px_-16px_rgba(0,0,0,0.40)]
    `,
                className
            )}
        >
            {children}
        </div>
    );
};

export const ClaudeLogo = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" className="h-5 w-5" viewBox="0 0 512 512" ><rect fill="#3178c6" height="512" rx="50" width="512" /><rect fill="#3178c6" height="512" rx="50" width="512" /><path clip-rule="evenodd" d="m316.939 407.424v50.061c8.138 4.172 17.763 7.3 28.875 9.386s22.823 3.129 35.135 3.129c11.999 0 23.397-1.147 34.196-3.442 10.799-2.294 20.268-6.075 28.406-11.342 8.138-5.266 14.581-12.15 19.328-20.65s7.121-19.007 7.121-31.522c0-9.074-1.356-17.026-4.069-23.857s-6.625-12.906-11.738-18.225c-5.112-5.319-11.242-10.091-18.389-14.315s-15.207-8.213-24.18-11.967c-6.573-2.712-12.468-5.345-17.685-7.9-5.217-2.556-9.651-5.163-13.303-7.822-3.652-2.66-6.469-5.476-8.451-8.448-1.982-2.973-2.974-6.336-2.974-10.091 0-3.441.887-6.544 2.661-9.308s4.278-5.136 7.512-7.118c3.235-1.981 7.199-3.52 11.894-4.615 4.696-1.095 9.912-1.642 15.651-1.642 4.173 0 8.581.313 13.224.938 4.643.626 9.312 1.591 14.008 2.894 4.695 1.304 9.259 2.947 13.694 4.928 4.434 1.982 8.529 4.276 12.285 6.884v-46.776c-7.616-2.92-15.937-5.084-24.962-6.492s-19.381-2.112-31.066-2.112c-11.895 0-23.163 1.278-33.805 3.833s-20.006 6.544-28.093 11.967c-8.086 5.424-14.476 12.333-19.171 20.729-4.695 8.395-7.043 18.433-7.043 30.114 0 14.914 4.304 27.638 12.912 38.172 8.607 10.533 21.675 19.45 39.204 26.751 6.886 2.816 13.303 5.579 19.25 8.291s11.086 5.528 15.415 8.448c4.33 2.92 7.747 6.101 10.252 9.543 2.504 3.441 3.756 7.352 3.756 11.733 0 3.233-.783 6.231-2.348 8.995s-3.939 5.162-7.121 7.196-7.147 3.624-11.894 4.771c-4.748 1.148-10.303 1.721-16.668 1.721-10.851 0-21.597-1.903-32.24-5.71-10.642-3.806-20.502-9.516-29.579-17.13zm-84.159-123.342h64.22v-41.082h-179v41.082h63.906v182.918h50.874z" fill="#fff" fill-rule="evenodd" /></svg>
    );
};

export const OpenAILogo = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" clip-rule="evenodd" fill-rule="evenodd" height={100} width={100} stroke-linejoin="round" stroke-miterlimit="2" viewBox="0 0 560 400" className=""><g fill="#61dafb">
            <path d="m415 200.028c0-17.887-22.399-34.837-56.741-45.349 7.925-35.002 4.403-62.85-11.117-71.765-3.577-2.092-7.76-3.082-12.327-3.082v12.273c2.531 0 4.567.495 6.273 1.43 7.485 4.293 10.732 20.638 8.201 41.662-.606 5.173-1.596 10.621-2.807 16.18-10.787-2.642-22.564-4.678-34.947-5.999-7.43-10.181-15.135-19.427-22.895-27.517 17.942-16.676 34.782-25.811 46.23-25.811v-12.273c-15.135 0-34.947 10.787-54.98 29.498-20.033-18.601-39.845-29.278-54.98-29.278v12.273c11.392 0 28.288 9.08 46.229 25.646-7.704 8.09-15.409 17.281-22.729 27.462-12.438 1.321-24.215 3.357-35.002 6.054-1.266-5.504-2.201-10.842-2.862-15.96-2.586-21.023.606-37.369 8.035-41.716 1.651-.991 3.798-1.431 6.329-1.431v-12.273c-4.623 0-8.805.991-12.438 3.082-15.464 8.916-18.931 36.708-10.951 71.6-34.232 10.567-56.521 27.462-56.521 45.294 0 17.886 22.399 34.836 56.741 45.348-7.925 35.002-4.403 62.85 11.117 71.765 3.577 2.092 7.76 3.082 12.383 3.082 15.134 0 34.947-10.787 54.979-29.498 20.033 18.601 39.845 29.278 54.98 29.278 4.623 0 8.805-.991 12.438-3.082 15.464-8.915 18.932-36.708 10.951-71.6 34.122-10.512 56.411-27.462 56.411-45.293zm-71.655-36.709c-2.036 7.1-4.568 14.419-7.43 21.739-2.256-4.403-4.623-8.805-7.209-13.208-2.532-4.403-5.229-8.696-7.925-12.878 7.815 1.155 15.354 2.586 22.564 4.347zm-25.206 58.612c-4.293 7.43-8.695 14.474-13.263 21.024-8.201.715-16.511 1.1-24.876 1.1-8.31 0-16.62-.385-24.766-1.045-4.567-6.55-9.025-13.539-13.318-20.914-4.183-7.209-7.98-14.529-11.447-21.903 3.412-7.375 7.264-14.75 11.392-21.959 4.293-7.43 8.695-14.474 13.263-21.023 8.201-.716 16.511-1.101 24.876-1.101 8.31 0 16.62.385 24.766 1.046 4.567 6.549 9.025 13.538 13.318 20.913 4.183 7.209 7.98 14.529 11.447 21.903-3.467 7.375-7.264 14.75-11.392 21.959zm17.776-7.154c2.972 7.374 5.504 14.749 7.595 21.904-7.21 1.761-14.804 3.247-22.674 4.402 2.696-4.237 5.393-8.585 7.925-13.043 2.531-4.403 4.898-8.86 7.154-13.263zm-55.805 58.722c-5.118-5.284-10.236-11.172-15.3-17.611 4.954.22 10.017.385 15.135.385 5.173 0 10.291-.11 15.3-.385-4.954 6.439-10.072 12.327-15.135 17.611zm-40.946-32.416c-7.815-1.155-15.354-2.586-22.564-4.347 2.036-7.1 4.568-14.419 7.43-21.739 2.256 4.403 4.623 8.805 7.209 13.208 2.587 4.403 5.229 8.696 7.925 12.878zm40.671-114.527c5.118 5.284 10.236 11.172 15.3 17.611-4.954-.22-10.017-.385-15.135-.385-5.173 0-10.291.11-15.3.385 4.953-6.439 10.072-12.327 15.135-17.611zm-40.726 32.416c-2.696 4.237-5.393 8.585-7.925 13.043-2.531 4.403-4.898 8.805-7.154 13.208-2.972-7.374-5.504-14.749-7.595-21.904 7.21-1.706 14.804-3.192 22.674-4.347zm-49.806 68.903c-19.482-8.31-32.085-19.207-32.085-27.847 0-8.641 12.603-19.593 32.085-27.848 4.733-2.036 9.906-3.852 15.244-5.559 3.137 10.787 7.265 22.014 12.383 33.517-5.063 11.447-9.135 22.619-12.217 33.351-5.449-1.706-10.622-3.578-15.41-5.614zm29.609 78.645c-7.485-4.293-10.732-20.638-8.201-41.662.606-5.173 1.596-10.621 2.807-16.18 10.787 2.642 22.564 4.678 34.947 5.999 7.43 10.181 15.135 19.427 22.895 27.517-17.942 16.676-34.782 25.812-46.23 25.812-2.476-.056-4.567-.551-6.218-1.486zm130.542-41.937c2.586 21.023-.606 37.369-8.035 41.716-1.651.991-3.798 1.431-6.329 1.431-11.392 0-28.288-9.08-46.229-25.646 7.704-8.09 15.409-17.281 22.729-27.462 12.438-1.321 24.215-3.357 35.002-6.054 1.266 5.559 2.256 10.897 2.862 16.015zm21.188-36.708c-4.733 2.036-9.906 3.852-15.245 5.559-3.137-10.787-7.264-22.014-12.382-33.517 5.063-11.447 9.135-22.619 12.217-33.351 5.449 1.707 10.622 3.578 15.465 5.614 19.482 8.31 32.085 19.207 32.085 27.848-.055 8.64-12.658 19.592-32.14 27.847z" fill-rule="nonzero" />
            <circle cx="279.945" cy="200.028" r="25.151" />
        </g>
        </svg>
    );
};
export const GeminiLogo = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" viewBox=".5 -.2 1023 1024.1" className=" w-5 h-5 dark:bg-white rounded-full"><path d="m478.5.6c-2.2.2-9.2.9-15.5 1.4-145.3 13.1-281.4 91.5-367.6 212-48 67-78.7 143-90.3 223.5-4.1 28.1-4.6 36.4-4.6 74.5s.5 46.4 4.6 74.5c27.8 192.1 164.5 353.5 349.9 413.3 33.2 10.7 68.2 18 108 22.4 15.5 1.7 82.5 1.7 98 0 68.7-7.6 126.9-24.6 184.3-53.9 8.8-4.5 10.5-5.7 9.3-6.7-.8-.6-38.3-50.9-83.3-111.7l-81.8-110.5-102.5-151.7c-56.4-83.4-102.8-151.6-103.2-151.6-.4-.1-.8 67.3-1 149.6-.3 144.1-.4 149.9-2.2 153.3-2.6 4.9-4.6 6.9-8.8 9.1-3.2 1.6-6 1.9-21.1 1.9h-17.3l-4.6-2.9c-3-1.9-5.2-4.4-6.7-7.3l-2.1-4.5.2-200.5.3-200.6 3.1-3.9c1.6-2.1 5-4.8 7.4-6.1 4.1-2 5.7-2.2 23-2.2 20.4 0 23.8.8 29.1 6.6 1.5 1.6 57 85.2 123.4 185.9s157.2 238.2 201.8 305.7l81 122.7 4.1-2.7c36.3-23.6 74.7-57.2 105.1-92.2 64.7-74.3 106.4-164.9 120.4-261.5 4.1-28.1 4.6-36.4 4.6-74.5s-.5-46.4-4.6-74.5c-27.8-192.1-164.5-353.5-349.9-413.3-32.7-10.6-67.5-17.9-106.5-22.3-9.6-1-75.7-2.1-84-1.3zm209.4 309.4c4.8 2.4 8.7 7 10.1 11.8.8 2.6 1 58.2.8 183.5l-.3 179.8-31.7-48.6-31.8-48.6v-130.7c0-84.5.4-132 1-134.3 1.6-5.6 5.1-10 9.9-12.6 4.1-2.1 5.6-2.3 21.3-2.3 14.8 0 17.4.2 20.7 2z" /><path d="m784.3 945.1c-3.5 2.2-4.6 3.7-1.5 2 2.2-1.3 5.8-4 5.2-4.1-.3 0-2 1-3.7 2.1zm-6.9 4.5c-1.8 1.4-1.8 1.5.4.4 1.2-.6 2.2-1.3 2.2-1.5 0-.8-.5-.6-2.6 1.1zm-5 3c-1.8 1.4-1.8 1.5.4.4 1.2-.6 2.2-1.3 2.2-1.5 0-.8-.5-.6-2.6 1.1zm-5 3c-1.8 1.4-1.8 1.5.4.4 1.2-.6 2.2-1.3 2.2-1.5 0-.8-.5-.6-2.6 1.1zm-7.6 4c-3.8 2-3.6 2.8.2.9 1.7-.9 3-1.8 3-2 0-.7-.1-.6-3.2 1.1z" /></svg>
    );
};

export const MetaIconOutline = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" className=" h-[80%] w-[80%]"><title>file_type_tailwind</title><path d="M9,13.7q1.4-5.6,7-5.6c5.6,0,6.3,4.2,9.1,4.9q2.8.7,4.9-2.1-1.4,5.6-7,5.6c-5.6,0-6.3-4.2-9.1-4.9Q11.1,10.9,9,13.7ZM2,22.1q1.4-5.6,7-5.6c5.6,0,6.3,4.2,9.1,4.9q2.8.7,4.9-2.1-1.4,5.6-7,5.6c-5.6,0-6.3-4.2-9.1-4.9Q4.1,19.3,2,22.1Z" className=" fill-[#44a8b3] " /></svg>);
};

const FramerMotion = () => {
    return (
        <img src="/framer-motion-sm.png" alt="Framer motion logo" className="inline h-6 w-6" />
    )
};